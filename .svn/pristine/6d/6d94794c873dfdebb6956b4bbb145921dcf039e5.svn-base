 <template>
  <div class="table">
    <el-breadcrumb separator-class="el-icon-arrow-right">
      <!-- <el-breadcrumb-item>商家管理</el-breadcrumb-item>
      <el-breadcrumb-item>商家列表</el-breadcrumb-item>-->
    </el-breadcrumb>
    <div class="container">
      <div class="handle-box">
        <label for>商家名称:</label>
        <el-input v-model="shopName" placeholder="请输入商家名称" class="handle-input mr10"></el-input>
        <label for>手机号:</label>
        <el-input v-model="phone" placeholder="请输入手机号" class="handle-input mr10"></el-input>
        <label for>销售姓名:</label>
        <el-input v-model="name" placeholder="请输入销售姓名" class="handle-input mr10"></el-input>
        <el-button
          icon="search"
          size="medium"
          type="primary"
          @click="search"
          style="color:018AD8"
        >搜索</el-button>
      </div>
      <el-table :data="List" border class="table" ref="multipleTable">
        <el-table-column prop="BusinessId" align="center" label="ID"></el-table-column>
        <el-table-column prop="BusinessName" align="center" label="商户名称"></el-table-column>
        <el-table-column prop="BusinessPhone" align="center" label="手机号"></el-table-column>
        <el-table-column align="center" label="销售">
          <template slot-scope="scope">
            <el-button
              @click="editSell(scope.row)"
              type="text"
            >{{ scope.row.AccountId ==0?'(未设置)':scope.row.AccountName }}</el-button>
          </template>
        </el-table-column>
        <el-table-column prop="CreateTime" align="center" label="创建时间"></el-table-column>
        <el-table-column label="操作" align="center" width="350">
          <template slot-scope="scope">
            <!-- <el-button type="text" @click="businessCount(scope.row)">商家统计</el-button> -->
            <el-button type="text" @click="sellChangeLog(scope.row)">销售/运营变更记录</el-button>
            <el-button type="text" @click="openRemarkForm(scope.row)">备注</el-button>
          </template>
        </el-table-column>
      </el-table>

      <!-- 备注弹出框 -->
      <el-dialog
        :title="`备注-${remarkForm.AccountName}`"
        :visible.sync="remarkVisible"
        width="600px"
      >
        <el-form ref="remarkForm" :model="remarkForm">
          <el-form-item>
            <el-input type="textarea" placeholder="点击此处添加备注" v-model="remarkForm.Remark" rows="8"></el-input>
          </el-form-item>
        </el-form>
        <span slot="footer" class="dialog-footer">
          <el-button type="primary" size="medium" @click="ModifyRemarkOk">确 定</el-button>
          <el-button @click="remarkVisible = false" size="medium">关 闭</el-button>
        </span>
      </el-dialog>

      <!-- 设置销售弹出框 -->
      <el-dialog
        :title="`设置销售-${setDirectorForm.AccountName}`"
        :visible.sync="setSellVisible"
        width="700px"
      >
        <div style="margin-bottom: 20px;">
          <label for>销售姓名:</label>
          <el-input
            :disabled="setDirectorFormRadio=='1'"
            v-model="accountName"
            placeholder="请输入销售姓名"
            style="width: 180px;margin-right: 20px;"
          ></el-input>
          <label for>手机号:</label>
          <el-input
            :disabled="setDirectorFormRadio=='1'"
            v-model="accountMobile"
            placeholder="请输入手机号"
            style="width: 180px;margin-right: 10px;"
          ></el-input>
          <el-button
            :disabled="setDirectorFormRadio=='1'"
            type="primary"
            @click="setDirectorFormTableSearch()"
          >搜索</el-button>
        </div>
        <el-table :data="tableData" fixed border ref="multipleTable">
          <el-table-column align="left" label="姓名">
            <template slot-scope="scope">
              <el-radio
                v-model="SellerId"
                :label="scope.row.AccountId"
              >{{scope.row.AccountName}}</el-radio>
            </template>
          </el-table-column>
          <el-table-column prop="Phone" align="center" label="电话"></el-table-column>
          <el-table-column prop="SubordinateCount" align="center" label="职位">
            <template slot-scope="scope">
              <span>{{scope.row.Level == 1?'销售 ':(scope.row.Level == 2? '销售主管':'大区经理')}}</span>
            </template>
          </el-table-column>
          <el-table-column prop="CreateTime" align="center" label="入职时间"></el-table-column>
        </el-table>
        <div v-show="isShow">
          <label for>变更原因：</label>
          <el-input style="width:400px;margin:20px 0" v-model="ChangeReason" placeholder="请输入变更原因"></el-input>
          <p class="last-person">原销售：{{sellerName}}</p>
        </div>
        <span slot="footer" class="dialog-footer">
          <el-button type="primary" size="medium" @click="setSellOk()">确 定</el-button>
          <el-button @click="setSellVisible = false" size="medium">关 闭</el-button>
        </span>
      </el-dialog>

      <div class="pagination">
        <el-pagination
          background
          @size-change="handleSizeChange"
          @current-change="handleCurrentChange"
          :current-page="currentPage"
          :page-sizes="[10, 20, 30, 40, 50]"
          :page-size="pageSize"
          layout="total, sizes, prev, pager, next, jumper"
          :total="pageCount"
        ></el-pagination>
      </div>
    </div>
  </div>
</template>

<script>
import axios from "axios";
import {
  getSellerList,
  setSellerStatus,
  searchPlace,
  editSellerList,
  addManagerSeller
} from "api/seller.js";
import {
  sellerBusinessList,
  sellerBusinessListRemarkModify,
  sellerAccountList,
  sellerBusinessSellerModify
} from "api/manager.js";

export default {
  data() {
    return {
      List: [], //列表
      shopName: "",
      name: "",
      phone: "",
      currentPage: 1,
      pageCount: 0,
      pageSize: 10,
      AccountId: "",
      isShow: false, //未设置销售隐藏
      cur_page: 1,
      pagesize: 1000,
      sellerName:'',//原销售
      accountName: "", //销售姓名
      accountMobile: "", //销售手机号
      tableData: [], //设置销售列表
      ChangeReason:'',//变更原因
      BusinessId:'',//商户Id
      SellerId:'',//销售Id

      setDirectorFormRadio: "2",
      setDirectorVisible: false,
      setSellVisible: false,
      setDirectorForm: {
        AccountName: ""
      },
      remarkForm: {
        AccountId: 0,
        AccountName: "",
        Remark: ""
      },
      remarkVisible: false,
      Id: "",
    };
  },
  created() {
    this._sellerBusinessList();
  },
  mounted() {},
  computed: {},
  methods: {
    //重置弹出窗口
    resetForm(formName) {
      if (this.$refs[formName] != undefined) {
        this.$refs[formName].resetFields();
      }
    },
    openAddForm() {
      this.resetForm("addForm");
    },
    addFormOk() {
      this.$refs["addForm"].validate(valid => {
        if (valid) {
          this._addManagerSeller().then(val => {
            this._sellerBusinessList();
          });
        } else {
          return false;
        }
      });
    },
    //打开备注弹窗
    openRemarkForm(item) {
      this.remarkVisible = true;
      this.remarkForm.AccountId = item.BusinessId;
      this.remarkForm.AccountName = item.AccountName;
      this.remarkForm.Remark = item.Remark;
    },
    //修改备注确认
    ModifyRemarkOk() {
      this._sellerBusinessListRemarkModify().then(val => {
        this.remarkVisible = false;
        this._sellerBusinessList();
        this.$message({
          showClose: true,
          message: "备注修改成功",
          type: "success"
        });
      });
    },
    //修改备注
    _sellerBusinessListRemarkModify(item) {
      const params = {
        Id: this.remarkForm.AccountId,
        Remark: this.remarkForm.Remark
      };
      return sellerBusinessListRemarkModify(params);
    },
    //打开设置销售弹窗
    editSell(item) {
      this.setSellVisible = true;
      this.BusinessId = item.BusinessId;
      this.SellerId = item.AccountId;
      this.sellerName = item.AccountName == ''?'暂无':item.AccountName;
      this.ChangeReason = '';
      this._sellerAccountList();
      console.log(item);
      if(item.AccountId ==0){
        this.isShow = false;
      }else {
        this.isShow = true;
      }
    },
    setSellOk() {
      this._sellerBusinessSellerModify().then(res => {
        this.setSellVisible = false;
        this.$message({
          showClose: true,
          message: "销售修改成功",
          type: "success"
        })
        this._sellerBusinessList();
      })
    },
    //确定修改销售
    _sellerBusinessSellerModify() {
      const params = {
        BusinessId : this.BusinessId,
        SellerId : this.SellerId,
        ChangeReason : this.ChangeReason,
      }
      return sellerBusinessSellerModify(params);
    },
    //设置、获取销售列表
    _sellerAccountList() {
      const params = {
        Name: this.accountName,
        Phone: this.accountMobile,
        pageindex: this.cur_page,
        pagecount: this.pagesize
      };
      sellerAccountList(params).then(res => {
        this.tableData = res.Data.List;
        this.pageCount = res.Data.TotalCount;
      });
    },
    setDirectorFormTableSearch() {
      this._sellerAccountList();
    },
    editafter() {
      this.setDirectorVisible = true;
    },
    //销售运营变更记录
    sellChangeLog(item) {
      this.$router.push({
        path: `/sell_ChangeLog/${item.AccountId}`,
        query: {
          name: item.AccountName,
          BusinessId : item.BusinessId
        }
      });
    },
    //商家统计
    businessCount(item) {
      this.$router.push({
        path: `/sell_BusinessCount/${item.AccountId}`,
        query: {
          name: item.AccountName
        }
      });
    },
    //分页导航尺寸更改
    handleSizeChange(val) {
      this.pageSize = val;
      this._sellerBusinessList();
    },
    // 分页导航
    handleCurrentChange(val) {
      this.currentPage = val;
      this._sellerBusinessList();
    },
    // 获取表格数据
    _sellerBusinessList() {
      var params = {
        pageindex: this.currentPage,
        pagecount: this.pageSize,
        BusinessName: this.shopName,
        BusinessPhone: this.phone,
        AccountName: this.name
      };
      sellerBusinessList(params).then(res => {
        this.List = res.Data.List;
        this.AccountId = res.Data.List.AccountId;
        this.pageCount = res.Data.TotalCount;
      });
    },
    search() {
      this.cur_page = 1;
      this._sellerBusinessList();
    }
  }
};
</script>

<style scoped>
.handle-box {
  margin-bottom: 20px;
}
.handle-box label {
  margin-left: 10px;
}
.handle-select {
  width: 120px;
}

.handle-input {
  width: 230px;
  display: inline-block;
}
.del-dialog-cnt {
  font-size: 16px;
  text-align: center;
}
.table {
  width: 100%;
  font-size: 14px;
}
.red {
  color: #ff0000;
}
.el-icon-plus {
  display: flex;
  display: -webkit-flex;
  align-items: center;
  justify-content: center;
}
.setPoint-tip {
  font-size: 12px;
  color: #ccc;
  display: flex;
  justify-content: flex-end;
}
.setPoint-tip span:last-child {
  margin-left: 20px;
}
.last-person {
  height: 30px;
  line-height: 30px;
}
</style>